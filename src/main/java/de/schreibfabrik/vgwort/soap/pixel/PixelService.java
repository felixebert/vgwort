package de.schreibfabrik.vgwort.soap.pixel;

import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.2.4-b01 Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "PixelService", targetNamespace = "http://vgwort.de/1.0/PixelService", wsdlLocation = "https://tom-test.vgwort.de/services/1.0/pixelService.wsdl")
public class PixelService extends Service
{

	private final static URL PIXELSERVICE_WSDL_LOCATION;
	private final static WebServiceException PIXELSERVICE_EXCEPTION;
	private final static QName PIXELSERVICE_QNAME = new QName("http://vgwort.de/1.0/PixelService", "PixelService");

	static
	{
		URL url = null;
		WebServiceException e = null;
		try
		{
			url = new URL("https://tom-test.vgwort.de/services/1.0/pixelService.wsdl");
		}
		catch (MalformedURLException ex)
		{
			e = new WebServiceException(ex);
		}
		PIXELSERVICE_WSDL_LOCATION = url;
		PIXELSERVICE_EXCEPTION = e;
	}

	public PixelService()
	{
		super(__getWsdlLocation(), PIXELSERVICE_QNAME);
	}

	public PixelService(WebServiceFeature... features)
	{
		super(__getWsdlLocation(), PIXELSERVICE_QNAME, features);
	}

	public PixelService(URL wsdlLocation)
	{
		super(wsdlLocation, PIXELSERVICE_QNAME);
	}

	public PixelService(URL wsdlLocation, WebServiceFeature... features)
	{
		super(wsdlLocation, PIXELSERVICE_QNAME, features);
	}

	public PixelService(URL wsdlLocation, QName serviceName)
	{
		super(wsdlLocation, serviceName);
	}

	public PixelService(URL wsdlLocation, QName serviceName, WebServiceFeature... features)
	{
		super(wsdlLocation, serviceName, features);
	}

	/**
	 * 
	 * @return returns Pixel
	 */
	@WebEndpoint(name = "PixelPort")
	public Pixel getPixelPort()
	{
		return super.getPort(new QName("http://vgwort.de/1.0/PixelService", "PixelPort"), Pixel.class);
	}

	/**
	 * 
	 * @param features
	 *            A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy. Supported features not in
	 *            the <code>features</code> parameter will have their default values.
	 * @return returns Pixel
	 */
	@WebEndpoint(name = "PixelPort")
	public Pixel getPixelPort(WebServiceFeature... features)
	{
		return super.getPort(new QName("http://vgwort.de/1.0/PixelService", "PixelPort"), Pixel.class, features);
	}

	private static URL __getWsdlLocation()
	{
		if (PIXELSERVICE_EXCEPTION != null)
		{
			throw PIXELSERVICE_EXCEPTION;
		}
		return PIXELSERVICE_WSDL_LOCATION;
	}

}
